
export default function messageEvents(socket, io) {
    console.log("Client l·∫Øng nghe message events:", socket.id);

    socket.on("join:message-listener", () => {
        socket.join("message-listener");
        console.log(`Socket ${socket.id} joined room: message-listener`);
    });

    // User g·ª≠i c√¢u h·ªèi
    socket.on("send:message", async ({ message, sessionId }) => {
        console.log(`üì• User ${sessionId} g·ª≠i: ${message}`);

        // Forward c√¢u h·ªèi cho AI listener
        io.to("message-listener").emit("message:received", {
            question: message,
            from: sessionId,
            receivedAt: new Date()
        });
    });

    // Nh·∫≠n c√¢u tr·∫£ l·ªùi t·ª´ AI
    socket.on("message:answer", ({ answer, from, question }) => {
        console.log(`ü§ñ AI tr·∫£ l·ªùi cho ${from}: ${answer}`);

        // G·ª≠i k·∫øt qu·∫£ tr·∫£ v·ªÅ ƒë√∫ng user (theo sessionId)
        io.to(from).emit("answer:message", {
            question,
            answer,
            from,
            receivedAt: new Date()
        });
    });
}
